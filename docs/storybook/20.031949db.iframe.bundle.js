/*! For license information please see 20.031949db.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkreact_neuro=self.webpackChunkreact_neuro||[]).push([[20],{"./node_modules/@google/generative-ai/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{var SchemaType,ExecutableCodeLanguage,Outcome;__webpack_require__.d(__webpack_exports__,{ij:()=>GoogleGenerativeAI}),function(SchemaType){SchemaType.STRING="string",SchemaType.NUMBER="number",SchemaType.INTEGER="integer",SchemaType.BOOLEAN="boolean",SchemaType.ARRAY="array",SchemaType.OBJECT="object"}(SchemaType||(SchemaType={})),function(ExecutableCodeLanguage){ExecutableCodeLanguage.LANGUAGE_UNSPECIFIED="language_unspecified",ExecutableCodeLanguage.PYTHON="python"}(ExecutableCodeLanguage||(ExecutableCodeLanguage={})),function(Outcome){Outcome.OUTCOME_UNSPECIFIED="outcome_unspecified",Outcome.OUTCOME_OK="outcome_ok",Outcome.OUTCOME_FAILED="outcome_failed",Outcome.OUTCOME_DEADLINE_EXCEEDED="outcome_deadline_exceeded"}(Outcome||(Outcome={}));const POSSIBLE_ROLES=["user","model","function","system"];var HarmCategory,HarmBlockThreshold,HarmProbability,BlockReason,FinishReason,TaskType,FunctionCallingMode,DynamicRetrievalMode;!function(HarmCategory){HarmCategory.HARM_CATEGORY_UNSPECIFIED="HARM_CATEGORY_UNSPECIFIED",HarmCategory.HARM_CATEGORY_HATE_SPEECH="HARM_CATEGORY_HATE_SPEECH",HarmCategory.HARM_CATEGORY_SEXUALLY_EXPLICIT="HARM_CATEGORY_SEXUALLY_EXPLICIT",HarmCategory.HARM_CATEGORY_HARASSMENT="HARM_CATEGORY_HARASSMENT",HarmCategory.HARM_CATEGORY_DANGEROUS_CONTENT="HARM_CATEGORY_DANGEROUS_CONTENT",HarmCategory.HARM_CATEGORY_CIVIC_INTEGRITY="HARM_CATEGORY_CIVIC_INTEGRITY"}(HarmCategory||(HarmCategory={})),function(HarmBlockThreshold){HarmBlockThreshold.HARM_BLOCK_THRESHOLD_UNSPECIFIED="HARM_BLOCK_THRESHOLD_UNSPECIFIED",HarmBlockThreshold.BLOCK_LOW_AND_ABOVE="BLOCK_LOW_AND_ABOVE",HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE="BLOCK_MEDIUM_AND_ABOVE",HarmBlockThreshold.BLOCK_ONLY_HIGH="BLOCK_ONLY_HIGH",HarmBlockThreshold.BLOCK_NONE="BLOCK_NONE"}(HarmBlockThreshold||(HarmBlockThreshold={})),function(HarmProbability){HarmProbability.HARM_PROBABILITY_UNSPECIFIED="HARM_PROBABILITY_UNSPECIFIED",HarmProbability.NEGLIGIBLE="NEGLIGIBLE",HarmProbability.LOW="LOW",HarmProbability.MEDIUM="MEDIUM",HarmProbability.HIGH="HIGH"}(HarmProbability||(HarmProbability={})),function(BlockReason){BlockReason.BLOCKED_REASON_UNSPECIFIED="BLOCKED_REASON_UNSPECIFIED",BlockReason.SAFETY="SAFETY",BlockReason.OTHER="OTHER"}(BlockReason||(BlockReason={})),function(FinishReason){FinishReason.FINISH_REASON_UNSPECIFIED="FINISH_REASON_UNSPECIFIED",FinishReason.STOP="STOP",FinishReason.MAX_TOKENS="MAX_TOKENS",FinishReason.SAFETY="SAFETY",FinishReason.RECITATION="RECITATION",FinishReason.LANGUAGE="LANGUAGE",FinishReason.BLOCKLIST="BLOCKLIST",FinishReason.PROHIBITED_CONTENT="PROHIBITED_CONTENT",FinishReason.SPII="SPII",FinishReason.MALFORMED_FUNCTION_CALL="MALFORMED_FUNCTION_CALL",FinishReason.OTHER="OTHER"}(FinishReason||(FinishReason={})),function(TaskType){TaskType.TASK_TYPE_UNSPECIFIED="TASK_TYPE_UNSPECIFIED",TaskType.RETRIEVAL_QUERY="RETRIEVAL_QUERY",TaskType.RETRIEVAL_DOCUMENT="RETRIEVAL_DOCUMENT",TaskType.SEMANTIC_SIMILARITY="SEMANTIC_SIMILARITY",TaskType.CLASSIFICATION="CLASSIFICATION",TaskType.CLUSTERING="CLUSTERING"}(TaskType||(TaskType={})),function(FunctionCallingMode){FunctionCallingMode.MODE_UNSPECIFIED="MODE_UNSPECIFIED",FunctionCallingMode.AUTO="AUTO",FunctionCallingMode.ANY="ANY",FunctionCallingMode.NONE="NONE"}(FunctionCallingMode||(FunctionCallingMode={})),function(DynamicRetrievalMode){DynamicRetrievalMode.MODE_UNSPECIFIED="MODE_UNSPECIFIED",DynamicRetrievalMode.MODE_DYNAMIC="MODE_DYNAMIC"}(DynamicRetrievalMode||(DynamicRetrievalMode={}));class GoogleGenerativeAIError extends Error{constructor(message){super(`[GoogleGenerativeAI Error]: ${message}`)}}class GoogleGenerativeAIResponseError extends GoogleGenerativeAIError{constructor(message,response){super(message),this.response=response}}class GoogleGenerativeAIFetchError extends GoogleGenerativeAIError{constructor(message,status,statusText,errorDetails){super(message),this.status=status,this.statusText=statusText,this.errorDetails=errorDetails}}class GoogleGenerativeAIRequestInputError extends GoogleGenerativeAIError{}class GoogleGenerativeAIAbortError extends GoogleGenerativeAIError{}var Task;!function(Task){Task.GENERATE_CONTENT="generateContent",Task.STREAM_GENERATE_CONTENT="streamGenerateContent",Task.COUNT_TOKENS="countTokens",Task.EMBED_CONTENT="embedContent",Task.BATCH_EMBED_CONTENTS="batchEmbedContents"}(Task||(Task={}));class RequestUrl{constructor(model,task,apiKey,stream,requestOptions){this.model=model,this.task=task,this.apiKey=apiKey,this.stream=stream,this.requestOptions=requestOptions}toString(){var _a,_b;const apiVersion=(null===(_a=this.requestOptions)||void 0===_a?void 0:_a.apiVersion)||"v1beta";let url=`${(null===(_b=this.requestOptions)||void 0===_b?void 0:_b.baseUrl)||"https://generativelanguage.googleapis.com"}/${apiVersion}/${this.model}:${this.task}`;return this.stream&&(url+="?alt=sse"),url}}async function getHeaders(url){var _a;const headers=new Headers;headers.append("Content-Type","application/json"),headers.append("x-goog-api-client",function getClientHeaders(requestOptions){const clientHeaders=[];return(null==requestOptions?void 0:requestOptions.apiClient)&&clientHeaders.push(requestOptions.apiClient),clientHeaders.push("genai-js/0.24.0"),clientHeaders.join(" ")}(url.requestOptions)),headers.append("x-goog-api-key",url.apiKey);let customHeaders=null===(_a=url.requestOptions)||void 0===_a?void 0:_a.customHeaders;if(customHeaders){if(!(customHeaders instanceof Headers))try{customHeaders=new Headers(customHeaders)}catch(e){throw new GoogleGenerativeAIRequestInputError(`unable to convert customHeaders value ${JSON.stringify(customHeaders)} to Headers: ${e.message}`)}for(const[headerName,headerValue]of customHeaders.entries()){if("x-goog-api-key"===headerName)throw new GoogleGenerativeAIRequestInputError(`Cannot set reserved header name ${headerName}`);if("x-goog-api-client"===headerName)throw new GoogleGenerativeAIRequestInputError(`Header name ${headerName} can only be set using the apiClient field`);headers.append(headerName,headerValue)}}return headers}async function makeModelRequest(model,task,apiKey,stream,body,requestOptions={},fetchFn=fetch){const{url,fetchOptions}=await async function constructModelRequest(model,task,apiKey,stream,body,requestOptions){const url=new RequestUrl(model,task,apiKey,stream,requestOptions);return{url:url.toString(),fetchOptions:Object.assign(Object.assign({},buildFetchOptions(requestOptions)),{method:"POST",headers:await getHeaders(url),body})}}(model,task,apiKey,stream,body,requestOptions);return async function makeRequest(url,fetchOptions,fetchFn=fetch){let response;try{response=await fetchFn(url,fetchOptions)}catch(e){!function handleResponseError(e,url){let err=e;"AbortError"===err.name?(err=new GoogleGenerativeAIAbortError(`Request aborted when fetching ${url.toString()}: ${e.message}`),err.stack=e.stack):e instanceof GoogleGenerativeAIFetchError||e instanceof GoogleGenerativeAIRequestInputError||(err=new GoogleGenerativeAIError(`Error fetching from ${url.toString()}: ${e.message}`),err.stack=e.stack);throw err}(e,url)}response.ok||await async function handleResponseNotOk(response,url){let errorDetails,message="";try{const json=await response.json();message=json.error.message,json.error.details&&(message+=` ${JSON.stringify(json.error.details)}`,errorDetails=json.error.details)}catch(e){}throw new GoogleGenerativeAIFetchError(`Error fetching from ${url.toString()}: [${response.status} ${response.statusText}] ${message}`,response.status,response.statusText,errorDetails)}(response,url);return response}(url,fetchOptions,fetchFn)}function buildFetchOptions(requestOptions){const fetchOptions={};if(void 0!==(null==requestOptions?void 0:requestOptions.signal)||(null==requestOptions?void 0:requestOptions.timeout)>=0){const controller=new AbortController;(null==requestOptions?void 0:requestOptions.timeout)>=0&&setTimeout((()=>controller.abort()),requestOptions.timeout),(null==requestOptions?void 0:requestOptions.signal)&&requestOptions.signal.addEventListener("abort",(()=>{controller.abort()})),fetchOptions.signal=controller.signal}return fetchOptions}function addHelpers(response){return response.text=()=>{if(response.candidates&&response.candidates.length>0){if(response.candidates.length>1&&console.warn(`This response had ${response.candidates.length} candidates. Returning text from the first candidate only. Access response.candidates directly to use the other candidates.`),hadBadFinishReason(response.candidates[0]))throw new GoogleGenerativeAIResponseError(`${formatBlockErrorMessage(response)}`,response);return function getText(response){var _a,_b,_c,_d;const textStrings=[];if(null===(_b=null===(_a=response.candidates)||void 0===_a?void 0:_a[0].content)||void 0===_b?void 0:_b.parts)for(const part of null===(_d=null===(_c=response.candidates)||void 0===_c?void 0:_c[0].content)||void 0===_d?void 0:_d.parts)part.text&&textStrings.push(part.text),part.executableCode&&textStrings.push("\n```"+part.executableCode.language+"\n"+part.executableCode.code+"\n```\n"),part.codeExecutionResult&&textStrings.push("\n```\n"+part.codeExecutionResult.output+"\n```\n");return textStrings.length>0?textStrings.join(""):""}(response)}if(response.promptFeedback)throw new GoogleGenerativeAIResponseError(`Text not available. ${formatBlockErrorMessage(response)}`,response);return""},response.functionCall=()=>{if(response.candidates&&response.candidates.length>0){if(response.candidates.length>1&&console.warn(`This response had ${response.candidates.length} candidates. Returning function calls from the first candidate only. Access response.candidates directly to use the other candidates.`),hadBadFinishReason(response.candidates[0]))throw new GoogleGenerativeAIResponseError(`${formatBlockErrorMessage(response)}`,response);return console.warn("response.functionCall() is deprecated. Use response.functionCalls() instead."),getFunctionCalls(response)[0]}if(response.promptFeedback)throw new GoogleGenerativeAIResponseError(`Function call not available. ${formatBlockErrorMessage(response)}`,response)},response.functionCalls=()=>{if(response.candidates&&response.candidates.length>0){if(response.candidates.length>1&&console.warn(`This response had ${response.candidates.length} candidates. Returning function calls from the first candidate only. Access response.candidates directly to use the other candidates.`),hadBadFinishReason(response.candidates[0]))throw new GoogleGenerativeAIResponseError(`${formatBlockErrorMessage(response)}`,response);return getFunctionCalls(response)}if(response.promptFeedback)throw new GoogleGenerativeAIResponseError(`Function call not available. ${formatBlockErrorMessage(response)}`,response)},response}function getFunctionCalls(response){var _a,_b,_c,_d;const functionCalls=[];if(null===(_b=null===(_a=response.candidates)||void 0===_a?void 0:_a[0].content)||void 0===_b?void 0:_b.parts)for(const part of null===(_d=null===(_c=response.candidates)||void 0===_c?void 0:_c[0].content)||void 0===_d?void 0:_d.parts)part.functionCall&&functionCalls.push(part.functionCall);return functionCalls.length>0?functionCalls:void 0}const badFinishReasons=[FinishReason.RECITATION,FinishReason.SAFETY,FinishReason.LANGUAGE];function hadBadFinishReason(candidate){return!!candidate.finishReason&&badFinishReasons.includes(candidate.finishReason)}function formatBlockErrorMessage(response){var _a,_b,_c;let message="";if(response.candidates&&0!==response.candidates.length||!response.promptFeedback){if(null===(_c=response.candidates)||void 0===_c?void 0:_c[0]){const firstCandidate=response.candidates[0];hadBadFinishReason(firstCandidate)&&(message+=`Candidate was blocked due to ${firstCandidate.finishReason}`,firstCandidate.finishMessage&&(message+=`: ${firstCandidate.finishMessage}`))}}else message+="Response was blocked",(null===(_a=response.promptFeedback)||void 0===_a?void 0:_a.blockReason)&&(message+=` due to ${response.promptFeedback.blockReason}`),(null===(_b=response.promptFeedback)||void 0===_b?void 0:_b.blockReasonMessage)&&(message+=`: ${response.promptFeedback.blockReasonMessage}`);return message}function __await(v){return this instanceof __await?(this.v=v,this):new __await(v)}function __asyncGenerator(thisArg,_arguments,generator){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,g=generator.apply(thisArg,_arguments||[]),q=[];return i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i;function verb(n){g[n]&&(i[n]=function(v){return new Promise((function(a,b){q.push([n,v,a,b])>1||resume(n,v)}))})}function resume(n,v){try{!function step(r){r.value instanceof __await?Promise.resolve(r.value.v).then(fulfill,reject):settle(q[0][2],r)}(g[n](v))}catch(e){settle(q[0][3],e)}}function fulfill(value){resume("next",value)}function reject(value){resume("throw",value)}function settle(f,v){f(v),q.shift(),q.length&&resume(q[0][0],q[0][1])}}"function"==typeof SuppressedError&&SuppressedError;const responseLineRE=/^data\: (.*)(?:\n\n|\r\r|\r\n\r\n)/;function processStream(response){const responseStream=function getResponseStream(inputStream){const reader=inputStream.getReader();return new ReadableStream({start(controller){let currentText="";return pump();function pump(){return reader.read().then((({value,done})=>{if(done)return currentText.trim()?void controller.error(new GoogleGenerativeAIError("Failed to parse stream")):void controller.close();currentText+=value;let parsedResponse,match=currentText.match(responseLineRE);for(;match;){try{parsedResponse=JSON.parse(match[1])}catch(e){return void controller.error(new GoogleGenerativeAIError(`Error parsing JSON response: "${match[1]}"`))}controller.enqueue(parsedResponse),currentText=currentText.substring(match[0].length),match=currentText.match(responseLineRE)}return pump()})).catch((e=>{let err=e;throw err.stack=e.stack,err="AbortError"===err.name?new GoogleGenerativeAIAbortError("Request aborted when reading from the stream"):new GoogleGenerativeAIError("Error reading from the stream"),err}))}}})}(response.body.pipeThrough(new TextDecoderStream("utf8",{fatal:!0}))),[stream1,stream2]=responseStream.tee();return{stream:generateResponseSequence(stream1),response:getResponsePromise(stream2)}}async function getResponsePromise(stream){const allResponses=[],reader=stream.getReader();for(;;){const{done,value}=await reader.read();if(done)return addHelpers(aggregateResponses(allResponses));allResponses.push(value)}}function generateResponseSequence(stream){return __asyncGenerator(this,arguments,(function*generateResponseSequence_1(){const reader=stream.getReader();for(;;){const{value,done}=yield __await(reader.read());if(done)break;yield yield __await(addHelpers(value))}}))}function aggregateResponses(responses){const lastResponse=responses[responses.length-1],aggregatedResponse={promptFeedback:null==lastResponse?void 0:lastResponse.promptFeedback};for(const response of responses){if(response.candidates){let candidateIndex=0;for(const candidate of response.candidates)if(aggregatedResponse.candidates||(aggregatedResponse.candidates=[]),aggregatedResponse.candidates[candidateIndex]||(aggregatedResponse.candidates[candidateIndex]={index:candidateIndex}),aggregatedResponse.candidates[candidateIndex].citationMetadata=candidate.citationMetadata,aggregatedResponse.candidates[candidateIndex].groundingMetadata=candidate.groundingMetadata,aggregatedResponse.candidates[candidateIndex].finishReason=candidate.finishReason,aggregatedResponse.candidates[candidateIndex].finishMessage=candidate.finishMessage,aggregatedResponse.candidates[candidateIndex].safetyRatings=candidate.safetyRatings,candidate.content&&candidate.content.parts){aggregatedResponse.candidates[candidateIndex].content||(aggregatedResponse.candidates[candidateIndex].content={role:candidate.content.role||"user",parts:[]});const newPart={};for(const part of candidate.content.parts)part.text&&(newPart.text=part.text),part.functionCall&&(newPart.functionCall=part.functionCall),part.executableCode&&(newPart.executableCode=part.executableCode),part.codeExecutionResult&&(newPart.codeExecutionResult=part.codeExecutionResult),0===Object.keys(newPart).length&&(newPart.text=""),aggregatedResponse.candidates[candidateIndex].content.parts.push(newPart)}candidateIndex++}response.usageMetadata&&(aggregatedResponse.usageMetadata=response.usageMetadata)}return aggregatedResponse}async function generateContentStream(apiKey,model,params,requestOptions){return processStream(await makeModelRequest(model,Task.STREAM_GENERATE_CONTENT,apiKey,!0,JSON.stringify(params),requestOptions))}async function generateContent(apiKey,model,params,requestOptions){const response=await makeModelRequest(model,Task.GENERATE_CONTENT,apiKey,!1,JSON.stringify(params),requestOptions);return{response:addHelpers(await response.json())}}function formatSystemInstruction(input){if(null!=input)return"string"==typeof input?{role:"system",parts:[{text:input}]}:input.text?{role:"system",parts:[input]}:input.parts?input.role?input:{role:"system",parts:input.parts}:void 0}function formatNewContent(request){let newParts=[];if("string"==typeof request)newParts=[{text:request}];else for(const partOrString of request)"string"==typeof partOrString?newParts.push({text:partOrString}):newParts.push(partOrString);return function assignRoleToPartsAndValidateSendMessageRequest(parts){const userContent={role:"user",parts:[]},functionContent={role:"function",parts:[]};let hasUserContent=!1,hasFunctionContent=!1;for(const part of parts)"functionResponse"in part?(functionContent.parts.push(part),hasFunctionContent=!0):(userContent.parts.push(part),hasUserContent=!0);if(hasUserContent&&hasFunctionContent)throw new GoogleGenerativeAIError("Within a single message, FunctionResponse cannot be mixed with other type of part in the request for sending chat message.");if(!hasUserContent&&!hasFunctionContent)throw new GoogleGenerativeAIError("No content is provided for sending chat message.");if(hasUserContent)return userContent;return functionContent}(newParts)}function formatGenerateContentInput(params){let formattedRequest;if(params.contents)formattedRequest=params;else{formattedRequest={contents:[formatNewContent(params)]}}return params.systemInstruction&&(formattedRequest.systemInstruction=formatSystemInstruction(params.systemInstruction)),formattedRequest}const VALID_PART_FIELDS=["text","inlineData","functionCall","functionResponse","executableCode","codeExecutionResult"],VALID_PARTS_PER_ROLE={user:["text","inlineData"],function:["functionResponse"],model:["text","functionCall","executableCode","codeExecutionResult"],system:["text"]};function isValidResponse(response){var _a;if(void 0===response.candidates||0===response.candidates.length)return!1;const content=null===(_a=response.candidates[0])||void 0===_a?void 0:_a.content;if(void 0===content)return!1;if(void 0===content.parts||0===content.parts.length)return!1;for(const part of content.parts){if(void 0===part||0===Object.keys(part).length)return!1;if(void 0!==part.text&&""===part.text)return!1}return!0}class ChatSession{constructor(apiKey,model,params,_requestOptions={}){this.model=model,this.params=params,this._requestOptions=_requestOptions,this._history=[],this._sendPromise=Promise.resolve(),this._apiKey=apiKey,(null==params?void 0:params.history)&&(!function validateChatHistory(history){let prevContent=!1;for(const currContent of history){const{role,parts}=currContent;if(!prevContent&&"user"!==role)throw new GoogleGenerativeAIError(`First content should be with role 'user', got ${role}`);if(!POSSIBLE_ROLES.includes(role))throw new GoogleGenerativeAIError(`Each item should include role field. Got ${role} but valid roles are: ${JSON.stringify(POSSIBLE_ROLES)}`);if(!Array.isArray(parts))throw new GoogleGenerativeAIError("Content should have 'parts' property with an array of Parts");if(0===parts.length)throw new GoogleGenerativeAIError("Each Content should have at least one part");const countFields={text:0,inlineData:0,functionCall:0,functionResponse:0,fileData:0,executableCode:0,codeExecutionResult:0};for(const part of parts)for(const key of VALID_PART_FIELDS)key in part&&(countFields[key]+=1);const validParts=VALID_PARTS_PER_ROLE[role];for(const key of VALID_PART_FIELDS)if(!validParts.includes(key)&&countFields[key]>0)throw new GoogleGenerativeAIError(`Content with role '${role}' can't contain '${key}' part`);prevContent=!0}}(params.history),this._history=params.history)}async getHistory(){return await this._sendPromise,this._history}async sendMessage(request,requestOptions={}){var _a,_b,_c,_d,_e,_f;await this._sendPromise;const newContent=formatNewContent(request),generateContentRequest={safetySettings:null===(_a=this.params)||void 0===_a?void 0:_a.safetySettings,generationConfig:null===(_b=this.params)||void 0===_b?void 0:_b.generationConfig,tools:null===(_c=this.params)||void 0===_c?void 0:_c.tools,toolConfig:null===(_d=this.params)||void 0===_d?void 0:_d.toolConfig,systemInstruction:null===(_e=this.params)||void 0===_e?void 0:_e.systemInstruction,cachedContent:null===(_f=this.params)||void 0===_f?void 0:_f.cachedContent,contents:[...this._history,newContent]},chatSessionRequestOptions=Object.assign(Object.assign({},this._requestOptions),requestOptions);let finalResult;return this._sendPromise=this._sendPromise.then((()=>generateContent(this._apiKey,this.model,generateContentRequest,chatSessionRequestOptions))).then((result=>{var _a;if(isValidResponse(result.response)){this._history.push(newContent);const responseContent=Object.assign({parts:[],role:"model"},null===(_a=result.response.candidates)||void 0===_a?void 0:_a[0].content);this._history.push(responseContent)}else{const blockErrorMessage=formatBlockErrorMessage(result.response);blockErrorMessage&&console.warn(`sendMessage() was unsuccessful. ${blockErrorMessage}. Inspect response object for details.`)}finalResult=result})),await this._sendPromise,finalResult}async sendMessageStream(request,requestOptions={}){var _a,_b,_c,_d,_e,_f;await this._sendPromise;const newContent=formatNewContent(request),generateContentRequest={safetySettings:null===(_a=this.params)||void 0===_a?void 0:_a.safetySettings,generationConfig:null===(_b=this.params)||void 0===_b?void 0:_b.generationConfig,tools:null===(_c=this.params)||void 0===_c?void 0:_c.tools,toolConfig:null===(_d=this.params)||void 0===_d?void 0:_d.toolConfig,systemInstruction:null===(_e=this.params)||void 0===_e?void 0:_e.systemInstruction,cachedContent:null===(_f=this.params)||void 0===_f?void 0:_f.cachedContent,contents:[...this._history,newContent]},chatSessionRequestOptions=Object.assign(Object.assign({},this._requestOptions),requestOptions),streamPromise=generateContentStream(this._apiKey,this.model,generateContentRequest,chatSessionRequestOptions);return this._sendPromise=this._sendPromise.then((()=>streamPromise)).catch((_ignored=>{throw new Error("SILENT_ERROR")})).then((streamResult=>streamResult.response)).then((response=>{if(isValidResponse(response)){this._history.push(newContent);const responseContent=Object.assign({},response.candidates[0].content);responseContent.role||(responseContent.role="model"),this._history.push(responseContent)}else{const blockErrorMessage=formatBlockErrorMessage(response);blockErrorMessage&&console.warn(`sendMessageStream() was unsuccessful. ${blockErrorMessage}. Inspect response object for details.`)}})).catch((e=>{"SILENT_ERROR"!==e.message&&console.error(e)})),streamPromise}}class GenerativeModel{constructor(apiKey,modelParams,_requestOptions={}){this.apiKey=apiKey,this._requestOptions=_requestOptions,modelParams.model.includes("/")?this.model=modelParams.model:this.model=`models/${modelParams.model}`,this.generationConfig=modelParams.generationConfig||{},this.safetySettings=modelParams.safetySettings||[],this.tools=modelParams.tools,this.toolConfig=modelParams.toolConfig,this.systemInstruction=formatSystemInstruction(modelParams.systemInstruction),this.cachedContent=modelParams.cachedContent}async generateContent(request,requestOptions={}){var _a;const formattedParams=formatGenerateContentInput(request),generativeModelRequestOptions=Object.assign(Object.assign({},this._requestOptions),requestOptions);return generateContent(this.apiKey,this.model,Object.assign({generationConfig:this.generationConfig,safetySettings:this.safetySettings,tools:this.tools,toolConfig:this.toolConfig,systemInstruction:this.systemInstruction,cachedContent:null===(_a=this.cachedContent)||void 0===_a?void 0:_a.name},formattedParams),generativeModelRequestOptions)}async generateContentStream(request,requestOptions={}){var _a;const formattedParams=formatGenerateContentInput(request),generativeModelRequestOptions=Object.assign(Object.assign({},this._requestOptions),requestOptions);return generateContentStream(this.apiKey,this.model,Object.assign({generationConfig:this.generationConfig,safetySettings:this.safetySettings,tools:this.tools,toolConfig:this.toolConfig,systemInstruction:this.systemInstruction,cachedContent:null===(_a=this.cachedContent)||void 0===_a?void 0:_a.name},formattedParams),generativeModelRequestOptions)}startChat(startChatParams){var _a;return new ChatSession(this.apiKey,this.model,Object.assign({generationConfig:this.generationConfig,safetySettings:this.safetySettings,tools:this.tools,toolConfig:this.toolConfig,systemInstruction:this.systemInstruction,cachedContent:null===(_a=this.cachedContent)||void 0===_a?void 0:_a.name},startChatParams),this._requestOptions)}async countTokens(request,requestOptions={}){const formattedParams=function formatCountTokensInput(params,modelParams){var _a;let formattedGenerateContentRequest={model:null==modelParams?void 0:modelParams.model,generationConfig:null==modelParams?void 0:modelParams.generationConfig,safetySettings:null==modelParams?void 0:modelParams.safetySettings,tools:null==modelParams?void 0:modelParams.tools,toolConfig:null==modelParams?void 0:modelParams.toolConfig,systemInstruction:null==modelParams?void 0:modelParams.systemInstruction,cachedContent:null===(_a=null==modelParams?void 0:modelParams.cachedContent)||void 0===_a?void 0:_a.name,contents:[]};const containsGenerateContentRequest=null!=params.generateContentRequest;if(params.contents){if(containsGenerateContentRequest)throw new GoogleGenerativeAIRequestInputError("CountTokensRequest must have one of contents or generateContentRequest, not both.");formattedGenerateContentRequest.contents=params.contents}else if(containsGenerateContentRequest)formattedGenerateContentRequest=Object.assign(Object.assign({},formattedGenerateContentRequest),params.generateContentRequest);else{const content=formatNewContent(params);formattedGenerateContentRequest.contents=[content]}return{generateContentRequest:formattedGenerateContentRequest}}(request,{model:this.model,generationConfig:this.generationConfig,safetySettings:this.safetySettings,tools:this.tools,toolConfig:this.toolConfig,systemInstruction:this.systemInstruction,cachedContent:this.cachedContent}),generativeModelRequestOptions=Object.assign(Object.assign({},this._requestOptions),requestOptions);return async function countTokens(apiKey,model,params,singleRequestOptions){return(await makeModelRequest(model,Task.COUNT_TOKENS,apiKey,!1,JSON.stringify(params),singleRequestOptions)).json()}(this.apiKey,this.model,formattedParams,generativeModelRequestOptions)}async embedContent(request,requestOptions={}){const formattedParams=function formatEmbedContentInput(params){if("string"==typeof params||Array.isArray(params))return{content:formatNewContent(params)};return params}(request),generativeModelRequestOptions=Object.assign(Object.assign({},this._requestOptions),requestOptions);return async function embedContent(apiKey,model,params,requestOptions){return(await makeModelRequest(model,Task.EMBED_CONTENT,apiKey,!1,JSON.stringify(params),requestOptions)).json()}(this.apiKey,this.model,formattedParams,generativeModelRequestOptions)}async batchEmbedContents(batchEmbedContentRequest,requestOptions={}){const generativeModelRequestOptions=Object.assign(Object.assign({},this._requestOptions),requestOptions);return async function batchEmbedContents(apiKey,model,params,requestOptions){const requestsWithModel=params.requests.map((request=>Object.assign(Object.assign({},request),{model})));return(await makeModelRequest(model,Task.BATCH_EMBED_CONTENTS,apiKey,!1,JSON.stringify({requests:requestsWithModel}),requestOptions)).json()}(this.apiKey,this.model,batchEmbedContentRequest,generativeModelRequestOptions)}}class GoogleGenerativeAI{constructor(apiKey){this.apiKey=apiKey}getGenerativeModel(modelParams,requestOptions){if(!modelParams.model)throw new GoogleGenerativeAIError("Must provide a model name. Example: genai.getGenerativeModel({ model: 'my-model-name' })");return new GenerativeModel(this.apiKey,modelParams,requestOptions)}getGenerativeModelFromCachedContent(cachedContent,modelParams,requestOptions){if(!cachedContent.name)throw new GoogleGenerativeAIRequestInputError("Cached content must contain a `name` field.");if(!cachedContent.model)throw new GoogleGenerativeAIRequestInputError("Cached content must contain a `model` field.");const disallowedDuplicates=["model","systemInstruction"];for(const key of disallowedDuplicates)if((null==modelParams?void 0:modelParams[key])&&cachedContent[key]&&(null==modelParams?void 0:modelParams[key])!==cachedContent[key]){if("model"===key){if((modelParams.model.startsWith("models/")?modelParams.model.replace("models/",""):modelParams.model)===(cachedContent.model.startsWith("models/")?cachedContent.model.replace("models/",""):cachedContent.model))continue}throw new GoogleGenerativeAIRequestInputError(`Different value for "${key}" specified in modelParams (${modelParams[key]}) and cachedContent (${cachedContent[key]})`)}const modelParamsFromCache=Object.assign(Object.assign({},modelParams),{model:cachedContent.model,tools:cachedContent.tools,toolConfig:cachedContent.toolConfig,systemInstruction:cachedContent.systemInstruction,cachedContent});return new GenerativeModel(this.apiKey,modelParamsFromCache,requestOptions)}}}}]);